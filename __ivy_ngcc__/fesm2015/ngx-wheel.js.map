{"version":3,"file":"ngx-wheel.js","sources":["ngx-wheel/lib/ngx-wheel.component.ts","ngx-wheel/lib/ngx-wheel.module.ts","ngx-wheel/public-api.ts","ngx-wheel/ngx-wheel.ts"],"names":[],"mappings":";;;;IAMY;AAAZ,WAAY,aAAa;AACxB,IAAC,gCAAe,CAAA;AAAC,IAChB,gCAAe,CAAA;AAAC,IAChB,kCAAiB,CAAA;AACnB,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;AACD,IACY;AAAZ,WAAY,eAAe;AAC1B,IAAC,4CAAyB,CAAA;AAAC,IAC1B,wCAAqB,CAAA;AAAC,IACtB,oCAAiB,CAAA;AACnB,CAAC,EAJW,eAAe,KAAf,eAAe,QAI1B;AACD,IAWa,iBAAiB,GAA9B,MAAa,iBAAiB;AAAG,IAE/B;AAAgB,QAgBN,gBAAW,GAAsB,IAAI,YAAY,EAAE,CAAC;AAChE,QAAY,mBAAc,GAAsB,IAAI,YAAY,EAAE,CAAC;AACnE,QAEE,kBAAa,GAAY,KAAK,CAAC;AACjC,QAAE,eAAU,GAAY,KAAK,CAAC;AAC9B,KAtBmB;AACnB,IAsBE,KAAK;AACP,QAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACpC,QAAI,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;AACjC,QAAI,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9F,QAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;AAAC,QACxB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;AAAC,QAC3B,IAAI,CAAC,eAAe,EAAE,CAAA;AAC1B,KAAG;AACH,IACE,QAAQ;AAAK,KACZ;AACH,IACE,IAAI;AACN,QAAI,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU;AAAE,YAAA,OAAM;AACrD,QAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;AAC1B,QAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AAC/B,QAAI,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAA;AACzG,QAAI,MAAM,YAAY,GAAG,eAAe,CAAC,QAAQ,GAAG,eAAe,CAAC,UAAU,CAAA;AAC9E,QAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,eAAe,CAAC,QAAQ,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;AACnF,QAAI,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAA;AAC/B,QAAI,UAAU,CAAC;AACf,YAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;AAC/B,YAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACpC,SAAK,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,CAAA;AAChC,KAAG;AACH,IAAE,eAAe;AACjB,QAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAA;AAC/B;AACI,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,QAAQ,CAAC;AAC9B,YAAM,WAAW,EAAE,QAAQ,CAAC,MAAM;AAClC,YAAM,QAAQ;AACd,YAAM,WAAW,EAAE,IAAI,CAAC,WAAW,IAAI,CAAC;AACxC,YAAM,WAAW,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE;AACzC,YAAM,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE;AACrC,YAAM,eAAe,EAAG,IAAI,CAAC,eAAe;AAC5C,YAAM,YAAY,EAAG,IAAI,CAAC,aAAa;AACvC,YAAM,SAAS,EACT;AACN,gBAAQ,IAAI,EAAE,YAAY;AAAE,gBACpB,QAAQ,EAAE,IAAI,CAAC,YAAY;AAAE,gBAC7B,KAAK,EAAE,IAAI,CAAC,UAAU;AAAoE,aAC3F;AACP,SAAK,CAAC,CAAA;AACN;AACI,QAAA,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1E,KAAG;AACH,IACE,WAAW;AACb;AACI,QAAA,QAAQ,CAAC,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA;AAC/C,KAAG;AACH,IACE,WAAW;AACZ,QAAG,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AAC3B;AACI,QAAA,IAAI,CAAC,EAAE;AACX,YAAM,CAAC,CAAC,IAAI,EAAE,CAAC;AACf,YAAM,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;AACtB,YAAM,CAAC,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAC9C,YAAM,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;AAC1C,YAAM,CAAC,CAAC,SAAS,EAAE,CAAC;AACpB,YAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACzC,YAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACzC,YAAM,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;AACrC,YAAM,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AACzC,YAAM,CAAC,CAAC,MAAM,EAAE,CAAC;AACjB,YAAM,CAAC,CAAC,IAAI,EAAE,CAAC;AACf,YAAM,CAAC,CAAC,OAAO,EAAE,CAAC;AAClB,SAAK;AACL,KAAG;AACH;;;;;;;;;6BAAC;AA3FU;AAAa,IAArB,KAAK,EAAE;AAAC,iDAAe;AACf;AAAa,IAArB,KAAK,EAAE;AAAC,qDAAgB;AAChB;AAAa,IAArB,KAAK,EAAE;AAAC,gDAAc;AACd;AAAa,IAArB,KAAK,EAAE;AAAC,gDAAc;AACd;AAAa,IAArB,KAAK,EAAE;AAAC,uDAAqB;AACrB;AAAa,IAArB,KAAK,EAAE;AAAC,qDAAmB;AACnB;AAAa,IAArB,KAAK,EAAE;AAAC,sDAAoB;AACpB;AAAa,IAArB,KAAK,EAAE;AAAC,6DAA2B;AAC3B;AAAa,IAArB,KAAK,EAAE;AAAC,2DAAyB;AACzB;AAAa,IAArB,KAAK,EAAE;AAAC,6DAA4B;AAC5B;AAAa,IAArB,KAAK,EAAE;AAAC,0DAAgC;AAChC;AAAa,IAArB,KAAK,EAAE;AAAC,wDAA4B;AAG3B;AAAa,IAAtB,MAAM,EAAE;AAAC,sDAAoD;AACpD;AAAa,IAAtB,MAAM,EAAE;AAAC,yDAAuD,CA6EnE;AAhGa,AAgGZ;gBAhG6B,oBAV7B,pCA0GC,ICjHW,cAAc,GAA3B,MAAa,cAAc;CDOjB,CAAC,FCPmB,EAAC;SDQ7B,QAAQ,EAAE,WAAW,UACrB,QAAQ,EAAE,lDCTC,cAAc,oBAN1B,QAAQ,CAAC,UACR,YAAY,EAAE,CAAC,iBAAiB,CAAC,UACjC;KAAO,EAAE,EACR,UACD,OAAO,EAAE,CAAC,iBAAiB,CAAC,MAC7B,CAAC,IACW,cAAc,CAAI;gCDa9B,MAGA,CAAC,IACW,iBAAiB,CA+F7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uLC/GD;AAAC;ACZD;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACgD","sourcesContent":["import { Component, OnInit, Input, AfterViewInit, Output, EventEmitter } from '@angular/core';\nexport interface Item {\n  text: string,\n  fillStyle: string,\n  id: any,\n}\nexport enum TextAlignment {\n  INNER = 'inner',\n  OUTER = 'outer',\n  CENTER = 'center',\n}\n\nexport enum TextOrientation {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n  CURVED = 'curved',\n}\n\n@Component({\n  selector: 'ngx-wheel',\n  template: `\n    <canvas (click)='!disableSpinOnClick && spin()' id='canvas' [width]='width' [height]='height'>\n        Canvas not supported, use another browser.\n    </canvas>\n`,\n  styles: [\n  ]\n})\nexport class NgxWheelComponent implements OnInit, AfterViewInit {\n\n  constructor() { }\n\n  @Input() height: number;\n  @Input() idToLandOn: any;\n  @Input() width: number;\n  @Input() items: Item[];\n  @Input() spinDuration: number;\n  @Input() spinAmount: number;\n  @Input() innerRadius: number;\n  @Input() pointerStrokeColor: string;\n  @Input() pointerFillColor: string;\n  @Input() disableSpinOnClick: boolean;\n  @Input() textOrientation: TextOrientation\n  @Input() textAlignment: TextAlignment\n  \n\n  @Output() onSpinStart: EventEmitter<any> = new EventEmitter();\n  @Output() onSpinComplete: EventEmitter<any> = new EventEmitter();\n\n  wheel: any\n  completedSpin: boolean = false;\n  isSpinning: boolean = false;\n\n  reset() {\n    this.wheel.stopAnimation(false);\n    this.wheel.rotationAngle = 0;\n    this.wheel.ctx.clearRect(0, 0, this.wheel.ctx.canvas.width, this.wheel.ctx.canvas.height);\n    this.isSpinning = false \n    this.completedSpin = false \n    this.ngAfterViewInit()\n  }\n\n  ngOnInit(): void {\n  }\n\n  spin() {\n    if (this.completedSpin || this.isSpinning) return\n    this.isSpinning = true\n    this.onSpinStart.emit(null)\n    const segmentToLandOn = this.wheel.segments.filter(x => !!x).find(({ id }) => this.idToLandOn === id)\n    const segmentTheta = segmentToLandOn.endAngle - segmentToLandOn.startAngle\n    this.wheel.animation.stopAngle = segmentToLandOn.endAngle - (segmentTheta / 4);\n    this.wheel.startAnimation()\n    setTimeout(() => {\n      this.completedSpin = true\n      this.onSpinComplete.emit(null)\n    }, this.spinDuration * 1000)\n  }\n  ngAfterViewInit() {\n    const segments = this.items\n    // @ts-ignore\n    this.wheel = new Winwheel({\n      numSegments: segments.length,\n      segments,\n      innerRadius: this.innerRadius || 0,\n      outerRadius: (this.height / 2) - 20,\n      centerY: (this.height / 2) + 20,\n      textOrientation : this.textOrientation,\n      textAligment : this.textAlignment,\n      animation:\n      {\n        type: 'spinToStop',  // Type of animation.\n        duration: this.spinDuration, // How long the animation is to take in seconds.\n        spins: this.spinAmount  // The number of complete 360 degree rotations the wheel is to do.\n      }\n    })\n    // @ts-ignore\n    TweenMax.ticker.addEventListener(\"tick\", this.drawPointer.bind(this));\n  }\n\n  ngOnDestroy() {\n    // @ts-ignore\n    TweenMax.ticker.removeEventListener(\"tick\")\n  }\n\n  drawPointer(){\n    let c = this.wheel.ctx;\n    // Create pointer.\n    if (c) {\n      c.save();\n      c.lineWidth = 2;\n      c.strokeStyle = this.pointerStrokeColor;\n      c.fillStyle = this.pointerFillColor;\n      c.beginPath();\n      c.moveTo((this.width / 2) - 20, 2);\n      c.lineTo((this.width / 2) + 20, 2);\n      c.lineTo((this.width / 2), 42);\n      c.lineTo((this.width / 2) - 20, 2);\n      c.stroke();\n      c.fill();\n      c.restore();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxWheelComponent } from './ngx-wheel.component';\n\n\n\n@NgModule({\n  declarations: [NgxWheelComponent],\n  imports: [\n  ],\n  exports: [NgxWheelComponent]\n})\nexport class NgxWheelModule { }\n","/*\n * Public API Surface of ngx-wheel\n */\n\nexport * from './lib/ngx-wheel.component';\nexport * from './lib/ngx-wheel.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}